/**
 * Wefly Track API
 * API for managing and retrieving track data for Wefly.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Metadata model module.
 * @module model/Metadata
 * @version 1.0.0
 */
class Metadata {
    /**
     * Constructs a new <code>Metadata</code>.
     * @alias module:model/Metadata
     */
    constructor() { 
        
        Metadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Metadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Metadata} obj Optional instance to populate.
     * @return {module:model/Metadata} The populated <code>Metadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Metadata();

            if (data.hasOwnProperty('pilotname')) {
                obj['pilotname'] = ApiClient.convertToType(data['pilotname'], 'String');
            }
            if (data.hasOwnProperty('distance')) {
                obj['distance'] = ApiClient.convertToType(data['distance'], 'Number');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'Number');
            }
            if (data.hasOwnProperty('maxAltitude')) {
                obj['maxAltitude'] = ApiClient.convertToType(data['maxAltitude'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('lastTime')) {
                obj['lastTime'] = ApiClient.convertToType(data['lastTime'], 'Date');
            }
            if (data.hasOwnProperty('startPosition')) {
                obj['startPosition'] = ApiClient.convertToType(data['startPosition'], ['Number']);
            }
            if (data.hasOwnProperty('lastPosition')) {
                obj['lastPosition'] = ApiClient.convertToType(data['lastPosition'], ['Number']);
            }
            if (data.hasOwnProperty('activity')) {
                obj['activity'] = ApiClient.convertToType(data['activity'], 'String');
            }
            if (data.hasOwnProperty('model')) {
                obj['model'] = ApiClient.convertToType(data['model'], 'String');
            }
            if (data.hasOwnProperty('area')) {
                obj['area'] = ApiClient.convertToType(data['area'], 'String');
            }
            if (data.hasOwnProperty('maxGain')) {
                obj['maxGain'] = ApiClient.convertToType(data['maxGain'], 'Number');
            }
            if (data.hasOwnProperty('dataSource')) {
                obj['dataSource'] = ApiClient.convertToType(data['dataSource'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Metadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Metadata</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['pilotname'] && !(typeof data['pilotname'] === 'string' || data['pilotname'] instanceof String)) {
            throw new Error("Expected the field `pilotname` to be a primitive type in the JSON string but got " + data['pilotname']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['startPosition'])) {
            throw new Error("Expected the field `startPosition` to be an array in the JSON data but got " + data['startPosition']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['lastPosition'])) {
            throw new Error("Expected the field `lastPosition` to be an array in the JSON data but got " + data['lastPosition']);
        }
        // ensure the json data is a string
        if (data['activity'] && !(typeof data['activity'] === 'string' || data['activity'] instanceof String)) {
            throw new Error("Expected the field `activity` to be a primitive type in the JSON string but got " + data['activity']);
        }
        // ensure the json data is a string
        if (data['model'] && !(typeof data['model'] === 'string' || data['model'] instanceof String)) {
            throw new Error("Expected the field `model` to be a primitive type in the JSON string but got " + data['model']);
        }
        // ensure the json data is a string
        if (data['area'] && !(typeof data['area'] === 'string' || data['area'] instanceof String)) {
            throw new Error("Expected the field `area` to be a primitive type in the JSON string but got " + data['area']);
        }
        // ensure the json data is a string
        if (data['dataSource'] && !(typeof data['dataSource'] === 'string' || data['dataSource'] instanceof String)) {
            throw new Error("Expected the field `dataSource` to be a primitive type in the JSON string but got " + data['dataSource']);
        }

        return true;
    }


}



/**
 * @member {String} pilotname
 */
Metadata.prototype['pilotname'] = undefined;

/**
 * @member {Number} distance
 */
Metadata.prototype['distance'] = undefined;

/**
 * @member {Number} duration
 */
Metadata.prototype['duration'] = undefined;

/**
 * @member {Number} maxAltitude
 */
Metadata.prototype['maxAltitude'] = undefined;

/**
 * @member {Date} startTime
 */
Metadata.prototype['startTime'] = undefined;

/**
 * @member {Date} lastTime
 */
Metadata.prototype['lastTime'] = undefined;

/**
 * @member {Array.<Number>} startPosition
 */
Metadata.prototype['startPosition'] = undefined;

/**
 * @member {Array.<Number>} lastPosition
 */
Metadata.prototype['lastPosition'] = undefined;

/**
 * @member {String} activity
 */
Metadata.prototype['activity'] = undefined;

/**
 * @member {String} model
 */
Metadata.prototype['model'] = undefined;

/**
 * @member {String} area
 */
Metadata.prototype['area'] = undefined;

/**
 * @member {Number} maxGain
 */
Metadata.prototype['maxGain'] = undefined;

/**
 * @member {String} dataSource
 */
Metadata.prototype['dataSource'] = undefined;






export default Metadata;

